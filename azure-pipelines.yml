

# Pipeline for building Azure Functions
# Here we create a universal package of the flows and push
# it to artifact repository

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UsePythonVersion@0
  displayName: 'Use Python 3.8'
  inputs:
    versionSpec: 3.8

- script: |
    pip install pytest requests setuptools wheel
    pip install -U databricks-connect==6.4.49
  displayName: 'Load Python Dependencies'

- checkout: self
  persistCredentials: true
  clean: true

- script: git fetch
- script: git checkout main
  displayName: 'Get Latest Branch'

- script: |
    git diff --name-only --diff-filter=AMR HEAD^1 HEAD | xargs -I '{}' cp --parents -r '{}' $(Build.BinariesDirectory)
    mkdir -p $(Build.BinariesDirectory)/src
    ls -ltra $(Build.Repository.LocalPath)
    cp -rf $(Build.Repository.LocalPath)/* $(Build.BinariesDirectory)/src
  displayName: 'Get Changes'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/jll-azara-v2-capone-migration-pipeline.zip'
    replaceExistingArchive: true

- task: UniversalPackages@0
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  displayName: Publish artifact
  inputs:
    command: 'publish'
    publishDirectory: '$(Build.ArtifactStagingDirectory)'
    feedsToUsePublish: 'internal'
    vstsFeedPublish: '63e7eb7c-1a78-47b5-b6ee-00dfa7d36334/c7ed6aa6-1bce-4906-b811-7bf6eb8e650f'
    vstsFeedPackagePublish: 'jll-azara-v2-capone-migration-pipeline'
    versionOption: 'patch'
    packagePublishDescription: 'Publish Azure Functions jll-azara-v2-capone-migration-pipeline repo'
